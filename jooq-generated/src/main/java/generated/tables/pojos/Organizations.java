/*
 * This file is generated by jOOQ.
 */
package generated.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Organizations implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String organizationsName;
    private final Integer indTaxpayerNum;
    private final Integer checkingAccount;

    public Organizations(Organizations value) {
        this.organizationsName = value.organizationsName;
        this.indTaxpayerNum = value.indTaxpayerNum;
        this.checkingAccount = value.checkingAccount;
    }

    public Organizations(
        String organizationsName,
        Integer indTaxpayerNum,
        Integer checkingAccount
    ) {
        this.organizationsName = organizationsName;
        this.indTaxpayerNum = indTaxpayerNum;
        this.checkingAccount = checkingAccount;
    }

    /**
     * Getter for <code>public.organizations.organizations_name</code>.
     */
    public String getOrganizationsName() {
        return this.organizationsName;
    }

    /**
     * Getter for <code>public.organizations.ind_taxpayer_num</code>.
     */
    public Integer getIndTaxpayerNum() {
        return this.indTaxpayerNum;
    }

    /**
     * Getter for <code>public.organizations.checking_account</code>.
     */
    public Integer getCheckingAccount() {
        return this.checkingAccount;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Organizations other = (Organizations) obj;
        if (this.organizationsName == null) {
            if (other.organizationsName != null)
                return false;
        }
        else if (!this.organizationsName.equals(other.organizationsName))
            return false;
        if (this.indTaxpayerNum == null) {
            if (other.indTaxpayerNum != null)
                return false;
        }
        else if (!this.indTaxpayerNum.equals(other.indTaxpayerNum))
            return false;
        if (this.checkingAccount == null) {
            if (other.checkingAccount != null)
                return false;
        }
        else if (!this.checkingAccount.equals(other.checkingAccount))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.organizationsName == null) ? 0 : this.organizationsName.hashCode());
        result = prime * result + ((this.indTaxpayerNum == null) ? 0 : this.indTaxpayerNum.hashCode());
        result = prime * result + ((this.checkingAccount == null) ? 0 : this.checkingAccount.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Organizations (");

        sb.append(organizationsName);
        sb.append(", ").append(indTaxpayerNum);
        sb.append(", ").append(checkingAccount);

        sb.append(")");
        return sb.toString();
    }
}
